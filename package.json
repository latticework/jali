{
  "//": {
    "babel": [
      "for ts+babel sourcemaps see http://stackoverflow.com/a/37799745/2240669"
    ],
    "ava": [
      "See https://github.com/avajs/ava/blob/master/docs/recipes/babelrc.md#transpiling-tests-and-sources-the-same-way.",
      "See https://github.com/avajs/ava/blob/master/docs/recipes/code-coverage.md"
    ],
    "dependencies": [
      "If needed, bitHound can ignore unused dendencies: http://blog.bithound.io/configuring-bithound-101/#ignoringmodulesmarkedasunused",
      "Add these back in at the appropriate time using Angular2 Webpack Starter, https://github.com/AngularClass/angular2-webpack-starter",
      "  babel-runtime",
      "  core-js",
      "  zone.js",
      "Determine whether/if to use disposables vs. rx.disposables"
    ],
    "devDependencies": [
      "Add these back in at the appropriate time using Angular2 Webpack Starter, https://github.com/AngularClass/angular2-webpack-starter",
      "  codelyzer"
    ]
  },
  "name": "jali-srcs",
  "version": "0.0.0",
  "description": "Cross-platform service specification and execution context. Jali is the JavaScript implementation.",
  "scripts": {
    "build": "npm run build:dev",
      "build:packages": "tsc -p packages",
        "postbuild:packages": "npm run build:examples",
      "build:pkg": "echo build:pkg complete",
        "prebuild:pkg": "npm run build:pkg:note",
        "build:pkg:core": "tsc -p packages/@jali-ms/core/tsconfig-build.json && cpy packages/@jali-ms/core/package.json dist/packages-dist/@jali-ms/core",
          "prebuild:pkg:core": "npm run build:pkg:util",
        "build:pkg:note": "tsc -p packages/@jali-ms/note/tsconfig-build.json && cpy packages/@jali-ms/note/package.json dist/packages-dist/@jali-ms/note",
          "prebuild:pkg:note": "npm run build:pkg:core",
        "build:pkg:util": "tsc -p packages/@jali-ms/util/tsconfig-build.json && webpack --config packages/@jali-ms/util/webpackfile.js",
      "build:examples": "tsc -p examples",
      "build:dev": "npm run build:packages",
        "prebuild:dev": "npm run clean",
        "postbuild:dev": "npm run build:examples && npm run lint",
      "build:docs": "npm run docs:es",
      "build:ut": "npm run build:packages -- --inlineSourceMap --inlineSources && npm run lint",
      "build:test": "npm run build:ut && npm run examples:run && npm run build:docs",
        "prebuild:test": "npm run clean",
      "build:prod": "npm run build:pkg",
        "prebuild:prod": "npm run clean",
    "clean": "npm run clean:dist && npm run clean:coverage && npm run clean:misc",
      "clean:dist": "rimraf ./dist",
      "clean:coverage": "rimraf .nyc_output && rimraf ./coverage",
      "clean:misc": "rimraf .Trash*",
      "clean:all": "npm cache clean && rimraf node_modules coverage",
        "preclean:all": "npm run clean",
    "cover": "BABEL_ENV=test nyc ava --concurrency 5",
      "precover": "npm run build:test",
      "postcover": "nyc report",
      "cover:html": "xdg-open ./coverage/index.html",
        "precover:html": "npm run cover",
    "docs": "npm run build:docs",
      "predocs": "npm run build:packages && npm run examples:run",
      "docs:es": "esdoc -c esdoc.json",
      "docs:td": "echo ⚠ WARNING: Not operational script ⚠ && typedoc --options typedoc.json",
      "docs:html": "xdg-open ./dist/docs/index.html",
        "predocs:html": "npm run docs",
    "e2e": "protractor",
      "pree2e": "webdriver-manager update",
    "examples": "npm run examples:run",
      "examples:run": "NODE_PATH=$NODE_PATH:./dist/examples/packages node ./dist/examples/examples/index.js",
      "examples:run:debug": "NODE_PATH=$NODE_PATH:./dist/examples/packages node --debug-brk ./dist/examples/examples/index.js",
      "preexamples": "npm run build:packages",
    "install:clean": "npm install",
      "preinstall:clean": "npm run clean:all",
    "lint": "tslint --format verbose \"packages/**/*.ts\" \"typings/**/*.ts\"",
    "start": "ng server",
      "start:clean": "npm start",
        "prestart:clean": "npm run clean",
    "test": "npm run test:run",
      "test:ut": "npm run test:run",
        "pretest:ut": "npm run build:ut",
      "test:debug": "npm run test:run:debug",
        "pretest:debug": "npm run pretest",
      "test:run": "BABEL_ENV=test ava --concurrency 5",
      "test:run:tap": "BABEL_ENV=test ava --tap --concurrency 5",
      "test:run:debug": "BABEL_ENV=test node --inspect --debug-brk ./node_modules/.bin/ava --tap --serial",
      "pretest": "npm run build:test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/latticework/jali.git"
  },
  "keywords": [
    "jali",
    "microservice"
  ],
  "author": "Latticework",
  "license": "MIT",
  "engines": {
    "node": ">= 8.9.0"
  },
  "bugs": {
    "url": "https://github.com/latticework/jali/issues"
  },
  "homepage": "http://jali-ms.io/",
  "dependencies": {
    "reflect-metadata": "^0.1.10"
  },
  "devDependencies": {
    "@types/mkdirp": "^0.3.29",
    "@types/node": "^11.11.8",
    "@types/sanitize-filename": "^1.1.28",
    "@types/tmp": "^0.0.32",
    "app-root-path": "^2.0.1",
    "awesome-typescript-loader": "^3.0.8",
    "ava": "^0.18.2",
    "babel-loader": "^6.3.2",
    "babel-plugin-espower": "^2.3.2",
    "babel-plugin-dynamic-import-node": "^1.2.0",
    "babel-plugin-syntax-trailing-function-commas": "^6.22.0",
    "babel-plugin-transform-async-generator-functions": "^6.24.1",
    "babel-plugin-transform-async-to-generator": "^6.22.0",
    "babel-plugin-transform-class-properties": "^6.23.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-function-name": "^6.22.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.23.0",
    "babel-plugin-transform-exponentiation-operator": "^6.22.0",
    "babel-plugin-transform-function-sent": "^1.0.1",
    "babel-plugin-transform-modern-regexp": "^0.0.4",
    "babel-plugin-transform-numeric-separator": "^7.0.0-alpha.11",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-plugin-transform-unicode-property-regex": "^2.0.5",
    "babel-register": "^6.26.0",
    "copy-webpack-plugin": "^4.0.1",
    "cpy-cli": "^1.0.1",
    "esdoc": "^0.5.2",
    "eslint": "^3.16.1",
    "mkdirp": "^0.5.1",
    "glob-fs": "^0.1.6",
    "nyc": "^10.1.2",
    "rimraf": "^2.6.1",
    "sanitize-filename": "^1.6.1",
    "tmp": "^0.0.31",
    "ts-node": "^3.3.0",
    "tslint": "^4.5.0",
    "typedoc": "^0.5.7",
    "typescript": "^2.2.1",
    "webpack": "^2.2.1",
    "webpack-merge": "^3.0.0"
  },
  "babel": {
    "env": {
      "development": {},
      "test": {
        "plugins": [
          "transform-es2015-modules-commonjs"
        ],
        "sourceMaps": "inline"
      },
      "production": {}
    },
    "plugins": [
      "espower",
      "syntax-trailing-function-commas",
      "transform-async-generator-functions",
      "transform-async-to-generator",
      "transform-class-properties",
      "transform-decorators-legacy",
      "transform-es2015-function-name",
      "transform-exponentiation-operator",
      "transform-function-sent",
      [
        "transform-modern-regexp",
        {
          "features": [
            "namedCapturingGroups",
            "dotAll"
          ]
        }
      ],
      "transform-numeric-separator",
      [
        "transform-runtime",
        {
          "polyfill": false,
          "regenerator": false
        }
      ],
      "transform-unicode-property-regex"
    ],
    "presets": [],
    "ignore": [
      "*.test.js"
    ],
    "sourceMaps": "inline"
  },
  "ava": {
    "files": [
      "dist/all/**/*.test.js"
    ],
    "concurrency": 5,
    "babel": {
      "plugins": [
        "espower",
        "dynamic-import-node",
        "syntax-trailing-function-commas",
        "transform-async-generator-functions",
        "transform-async-to-generator",
        "transform-class-properties",
        "transform-decorators-legacy",
        "transform-es2015-modules-commonjs",
        "transform-es2015-function-name",
        "transform-exponentiation-operator",
        "transform-function-sent",
        [
          "transform-modern-regexp",
          {
            "features": [
              "namedCapturingGroups",
              "dotAll"
            ]
          }
        ],
        "transform-numeric-separator",
        [
          "transform-runtime",
          {
            "polyfill": false,
            "regenerator": false
          }
        ],
        "transform-unicode-property-regex"
      ]
    },
    "require": [
      "babel-register"
    ]
  },
  "nyc": {
    "exclude": [
      "**/*.test.*",
      "**/testing/*"
    ],
    "reporter": [
      "html",
      "cobertura"
    ]
  }
}
